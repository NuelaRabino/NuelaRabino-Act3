{"ast":null,"code":"export default {\n  props: ['cart'],\n  data() {\n    return {\n      notification: '' // Initialize notification message\n    };\n  },\n  methods: {\n    removeFromCart(index) {\n      this.cart.splice(index, 1);\n      this.showNotification('Item removed from cart');\n    },\n    increaseQuantity(index) {\n      this.cart[index].quantity++;\n      this.showNotification('Quantity increased');\n    },\n    decreaseQuantity(index) {\n      if (this.cart[index].quantity > 1) {\n        this.cart[index].quantity--;\n        this.showNotification('Quantity decreased');\n      }\n    },\n    updateQuantity(index) {\n      if (this.cart[index].quantity < 1) {\n        this.cart[index].quantity = 1;\n        this.showNotification('Quantity cannot be zero');\n      }\n    },\n    showNotification(message) {\n      this.notification = message;\n      setTimeout(() => {\n        this.hideNotification();\n      }, 3000);\n    },\n    hideNotification() {\n      this.notification = '';\n    }\n  }\n};","map":{"version":3,"names":["props","data","notification","methods","removeFromCart","index","cart","splice","showNotification","increaseQuantity","quantity","decreaseQuantity","updateQuantity","message","setTimeout","hideNotification"],"sources":["C:\\Users\\Nuela\\my-laboratories\\src\\components\\ShoppingCart.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Shopping Cart</h1>\r\n    <div class=\"notification\" v-if=\"notification\">{{ notification }}</div>\r\n    <table class=\"cart-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Product Name</th>\r\n          <th>Product Price</th>\r\n          <th>Quantity</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(item, index) in cart\" :key=\"index\">\r\n          <td>{{ item.product.name }}</td>\r\n          <td>Php {{ item.product.price }}.00</td>\r\n          <td>\r\n            <input type=\"number\" v-model=\"item.quantity\" min=\"1\" @change=\"updateQuantity(index)\">\r\n          </td>\r\n          <td>\r\n            <button @click=\"removeFromCart(index)\" class=\"cart-action-btn\">\r\n              <i class=\"fas fa-trash-alt\"></i>\r\n            </button>\r\n            <button @click=\"increaseQuantity(index)\" class=\"cart-action-btn\">\r\n              <i class=\"fas fa-plus\"></i>\r\n            </button>\r\n            <button @click=\"decreaseQuantity(index)\" class=\"cart-action-btn\">\r\n              <i class=\"fas fa-minus\"></i>\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: ['cart'],\r\n  data() {\r\n    return {\r\n      notification: '' // Initialize notification message\r\n    };\r\n  },\r\n  methods: {\r\n    removeFromCart(index) {\r\n      this.cart.splice(index, 1);\r\n      this.showNotification('Item removed from cart');\r\n    },\r\n    increaseQuantity(index) {\r\n      this.cart[index].quantity++;\r\n      this.showNotification('Quantity increased');\r\n    },\r\n    decreaseQuantity(index) {\r\n      if (this.cart[index].quantity > 1) {\r\n        this.cart[index].quantity--;\r\n        this.showNotification('Quantity decreased');\r\n      }\r\n    },\r\n    updateQuantity(index) {\r\n      if (this.cart[index].quantity < 1) {\r\n        this.cart[index].quantity = 1;\r\n        this.showNotification('Quantity cannot be zero');\r\n      }\r\n    },\r\n    showNotification(message) {\r\n      this.notification = message;\r\n      setTimeout(() => {\r\n        this.hideNotification();\r\n      }, 3000);\r\n    },\r\n    hideNotification() {\r\n      this.notification = '';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* CSS para sa table at mga kolumna */\r\n.cart-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.cart-table th,\r\n.cart-table td {\r\n  padding: 12px;\r\n  text-align: left;\r\n  border: 1px solid #3d6f49; /* Kulay ng border - darker green */\r\n}\r\n\r\n/* Estilo para sa button ng actions */\r\n.cart-action-btn {\r\n  background-color: #3d6f49; /* Darker green */\r\n  color: white;\r\n  border: none;\r\n  padding: 6px 10px;\r\n  margin-right: 5px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  transition-duration: 0.4s;\r\n}\r\n\r\n.cart-action-btn i {\r\n  font-size: 16px;\r\n}\r\n\r\n.cart-action-btn:hover {\r\n  background-color: #2f5238; /* Darker shade ng green */\r\n}\r\n\r\n/* Notification styling */\r\n.notification {\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  background-color: #333;\r\n  color: #fff;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  z-index: 999; /* Ensure notification appears on top of other elements */\r\n}\r\n</style>\r\n"],"mappings":"AAsCA,eAAe;EACbA,KAAK,EAAE,CAAC,MAAM,CAAC;EACfC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,EAAC,CAAE;IACnB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAACC,KAAK,EAAE;MACpB,IAAI,CAACC,IAAI,CAACC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MAC1B,IAAI,CAACG,gBAAgB,CAAC,wBAAwB,CAAC;IACjD,CAAC;IACDC,gBAAgBA,CAACJ,KAAK,EAAE;MACtB,IAAI,CAACC,IAAI,CAACD,KAAK,CAAC,CAACK,QAAQ,EAAE;MAC3B,IAAI,CAACF,gBAAgB,CAAC,oBAAoB,CAAC;IAC7C,CAAC;IACDG,gBAAgBA,CAACN,KAAK,EAAE;MACtB,IAAI,IAAI,CAACC,IAAI,CAACD,KAAK,CAAC,CAACK,QAAO,GAAI,CAAC,EAAE;QACjC,IAAI,CAACJ,IAAI,CAACD,KAAK,CAAC,CAACK,QAAQ,EAAE;QAC3B,IAAI,CAACF,gBAAgB,CAAC,oBAAoB,CAAC;MAC7C;IACF,CAAC;IACDI,cAAcA,CAACP,KAAK,EAAE;MACpB,IAAI,IAAI,CAACC,IAAI,CAACD,KAAK,CAAC,CAACK,QAAO,GAAI,CAAC,EAAE;QACjC,IAAI,CAACJ,IAAI,CAACD,KAAK,CAAC,CAACK,QAAO,GAAI,CAAC;QAC7B,IAAI,CAACF,gBAAgB,CAAC,yBAAyB,CAAC;MAClD;IACF,CAAC;IACDA,gBAAgBA,CAACK,OAAO,EAAE;MACxB,IAAI,CAACX,YAAW,GAAIW,OAAO;MAC3BC,UAAU,CAAC,MAAM;QACf,IAAI,CAACC,gBAAgB,CAAC,CAAC;MACzB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;IACDA,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACb,YAAW,GAAI,EAAE;IACxB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}